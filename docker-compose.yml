version: "3.9"

services:
  # ==================== DATABASES ====================
  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tasksdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # ==================== BACKEND SERVICES ====================
  user-service:
    build: ./user-service
    restart: always
    env_file:
      - ./user-service/.env
    depends_on:
      - mongodb
    volumes:
      - ./user-service:/app
      - /app/node_modules
    ports:
      - "4002:4002"

  task-service:
    build: ./task-service
    restart: always
    env_file:
      - ./task-service/.env
    depends_on:
      - postgres
    volumes:
      - ./task-service:/app
      - /app/node_modules
    ports:
      - "4001"

  api-gateway:
    build: ./api-gateway
    restart: always
    env_file:
      - ./api-gateway/.env
    depends_on:
      - user-service
      - task-service
    volumes:
      - ./api-gateway:/app
      - /app/node_modules
    ports:
      - "4000:4000"

  # ==================== FRONTEND ====================
  frontend:
    build: ./frontend
    restart: always
    env_file:
      - ./frontend/.env
    depends_on:
      - api-gateway
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"

  # ==================== NGINX LOAD BALANCER ====================
  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-gateway
      - task-service
      - user-service

# ==================== VOLUMES ====================
volumes:
  mongo_data:
  postgres_data:
